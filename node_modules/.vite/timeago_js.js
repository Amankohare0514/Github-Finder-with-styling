import {
  __commonJS
} from "./chunk-OZKD6XBJ.js";

// node_modules/timeago.js/lib/utils/date.js
var require_date = __commonJS({
  "node_modules/timeago.js/lib/utils/date.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var SEC_ARRAY = [60, 60, 24, 7, 365 / 7 / 12, 12];
    function toDate(input) {
      if (input instanceof Date)
        return +input;
      if (!isNaN(input) || /^\d+$/.test(input))
        return +new Date(parseInt(input));
      input = (input || "").trim().replace(/\.\d+/, "").replace(/-/, "/").replace(/-/, "/").replace(/(\d)T(\d)/, "$1 $2").replace(/Z/, " UTC").replace(/([+-]\d\d):?(\d\d)/, " $1$2");
      return +new Date(input);
    }
    exports.toDate = toDate;
    function formatDiff(diff, localeFunc) {
      var agoIn = diff < 0 ? 1 : 0;
      diff = Math.abs(diff);
      var totalSec = diff;
      var idx = 0;
      for (; diff >= SEC_ARRAY[idx] && idx < SEC_ARRAY.length; idx++) {
        diff /= SEC_ARRAY[idx];
      }
      diff = ~~diff;
      idx *= 2;
      if (diff > (idx === 0 ? 9 : 1))
        idx += 1;
      return localeFunc(diff, idx, totalSec)[agoIn].replace("%s", diff);
    }
    exports.formatDiff = formatDiff;
    function diffSec(date, relativeDate) {
      relativeDate = relativeDate ? toDate(relativeDate) : +new Date();
      return (relativeDate - toDate(date)) / 1e3;
    }
    exports.diffSec = diffSec;
    function nextInterval(diff) {
      var rst = 1, i = 0, d = Math.abs(diff);
      for (; diff >= SEC_ARRAY[i] && i < SEC_ARRAY.length; i++) {
        diff /= SEC_ARRAY[i];
        rst *= SEC_ARRAY[i];
      }
      d = d % rst;
      d = d ? rst - d : rst;
      return ~~d;
    }
    exports.nextInterval = nextInterval;
  }
});

// node_modules/timeago.js/lib/lang/en_US.js
var require_en_US = __commonJS({
  "node_modules/timeago.js/lib/lang/en_US.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var EN_US = ["second", "minute", "hour", "day", "week", "month", "year"];
    function default_1(diff, idx) {
      if (idx === 0)
        return ["just now", "right now"];
      var unit = EN_US[~~(idx / 2)];
      if (diff > 1)
        unit += "s";
      return [diff + " " + unit + " ago", "in " + diff + " " + unit];
    }
    exports.default = default_1;
  }
});

// node_modules/timeago.js/lib/lang/zh_CN.js
var require_zh_CN = __commonJS({
  "node_modules/timeago.js/lib/lang/zh_CN.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var ZH_CN = ["\u79D2", "\u5206\u949F", "\u5C0F\u65F6", "\u5929", "\u5468", "\u4E2A\u6708", "\u5E74"];
    function default_1(diff, idx) {
      if (idx === 0)
        return ["\u521A\u521A", "\u7247\u523B\u540E"];
      var unit = ZH_CN[~~(idx / 2)];
      return [diff + " " + unit + "\u524D", diff + " " + unit + "\u540E"];
    }
    exports.default = default_1;
  }
});

// node_modules/timeago.js/lib/locales.js
var require_locales = __commonJS({
  "node_modules/timeago.js/lib/locales.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var en_US_1 = __importDefault(require_en_US());
    var zh_CN_1 = __importDefault(require_zh_CN());
    var Locales = {
      en_US: en_US_1.default,
      zh_CN: zh_CN_1.default
    };
    exports.register = function(locale, func) {
      Locales[locale] = func;
    };
    exports.getLocale = function(locale) {
      return Locales[locale] || en_US_1.default;
    };
  }
});

// node_modules/timeago.js/lib/format.js
var require_format = __commonJS({
  "node_modules/timeago.js/lib/format.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var date_1 = require_date();
    var locales_1 = require_locales();
    exports.format = function(date, locale, opts) {
      var sec = date_1.diffSec(date, opts && opts.relativeDate);
      return date_1.formatDiff(sec, locales_1.getLocale(locale));
    };
  }
});

// node_modules/timeago.js/lib/utils/dom.js
var require_dom = __commonJS({
  "node_modules/timeago.js/lib/utils/dom.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var ATTR_TIMEAGO_TID = "timeago-tid";
    var ATTR_DATETIME = "datetime";
    function getDateAttribute(node) {
      return node.getAttribute(ATTR_DATETIME);
    }
    exports.getDateAttribute = getDateAttribute;
    function setTimerId(node, timerId) {
      node.setAttribute(ATTR_TIMEAGO_TID, timerId);
    }
    exports.setTimerId = setTimerId;
    function getTimerId(node) {
      return ~~node.getAttribute(ATTR_TIMEAGO_TID);
    }
    exports.getTimerId = getTimerId;
  }
});

// node_modules/timeago.js/lib/realtime.js
var require_realtime = __commonJS({
  "node_modules/timeago.js/lib/realtime.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var dom_1 = require_dom();
    var date_1 = require_date();
    var locales_1 = require_locales();
    var TIMER_POOL = {};
    var clear = function(tid) {
      clearTimeout(tid);
      delete TIMER_POOL[tid];
    };
    function run(node, date, localeFunc, opts) {
      clear(dom_1.getTimerId(node));
      var relativeDate = opts.relativeDate, minInterval = opts.minInterval;
      var diff = date_1.diffSec(date, relativeDate);
      node.innerText = date_1.formatDiff(diff, localeFunc);
      var tid = setTimeout(function() {
        run(node, date, localeFunc, opts);
      }, Math.max(date_1.nextInterval(diff), minInterval || 1) * 1e3, 2147483647);
      TIMER_POOL[tid] = 0;
      dom_1.setTimerId(node, tid);
    }
    function cancel(node) {
      if (node)
        clear(dom_1.getTimerId(node));
      else
        Object.keys(TIMER_POOL).forEach(clear);
    }
    exports.cancel = cancel;
    function render(nodes, locale, opts) {
      var nodeList = "length" in nodes ? nodes : [nodes];
      nodeList.forEach(function(node) {
        run(node, dom_1.getDateAttribute(node), locales_1.getLocale(locale), opts || {});
      });
      return nodeList;
    }
    exports.render = render;
  }
});

// node_modules/timeago.js/lib/index.js
var require_lib = __commonJS({
  "node_modules/timeago.js/lib/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var format_1 = require_format();
    exports.format = format_1.format;
    var realtime_1 = require_realtime();
    exports.render = realtime_1.render;
    exports.cancel = realtime_1.cancel;
    var locales_1 = require_locales();
    exports.register = locales_1.register;
  }
});

// dep:timeago_js
var timeago_js_default = require_lib();
export {
  timeago_js_default as default
};
//# sourceMappingURL=timeago_js.js.map
